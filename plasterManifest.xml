<?xml version="1.0" encoding="utf-8"?>
<plasterManifest schemaVersion="1.1"
                 templateType="Project"
                 xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
  <metadata>
    <name>TikabuPowerShellModule</name>
    <id>b5424f4c-ff73-46a5-9608-6b399f400339</id>
    <version>1.0.1</version>
    <title>Tikabu PowerShell Manifest Module</title>
    <description>Creates files for a PowerShell script module.</description>
    <author>Plaster</author>
    <tags>Module, ScriptModule, ModuleManifest</tags>
  </metadata>
  <parameters>
        <parameter name='ModuleName'
                   type='text'
                   prompt='Enter the name of the module'/>

        <parameter name='Version'
                   type='text'
                   prompt='Enter the version number of the module'
                   default='0.0.1'/>

        <parameter name='Editor'
                   type='choice'
                   prompt='Select an editor for editor integration (or None):'
                   default='1'
                   store='text' >
            <choice label='&amp;None'
                    help="No editor specified."
                    value="None"/>
            <choice label='Visual Studio &amp;Code'
                    help="Your editor is Visual Studio Code."
                    value="VSCode"/>
        </parameter>

        <parameter name='Build'
                   type='choice'
                   prompt='Select a build pipeline (or None):'
                   default='1'
                   store='text' >
            <choice label='&amp;None'
                    help="No build pipeline."
                    value="None"/>
            <choice label='&amp;Azure DevOps'
                    help="Use Azure DevOps build pipeline with invoke-build."
                    value="VSTS"/>
        </parameter>

        <parameter condition="$PLASTER_PARAM_Build -eq 'VSTS'"
                   name='Binaries'
                   type='choice'
                   prompt='Does your module include binaries?:'
                   default='0'
                   store='text' >
            <choice label='&amp;No'
                    help="No binaries."
                    value="No"/>
            <choice label='&amp;Yes'
                    help="Module includes binaries."
                    value="Yes"/>
        </parameter>

        <parameter name='FullName'
           type='user-fullname'
           prompt='Enter your full name'
           store='text' />

        <parameter condition="$PLASTER_PARAM_Build -eq 'VSTS' -and $PLASTER_PARAM_Binaries -eq 'Yes'"
                   name='VstsPmRepoNameBin'
                   type='text'
                   prompt='Enter the name of Azure DevOps Package Manager Binary Repo'/>

        <parameter condition="$PLASTER_PARAM_Build -eq 'VSTS'"
                   name='VstsPmRepoNameModule'
                   type='text'
                   prompt='Enter the name of Azure DevOps Package Manager Module Repo'/>
  </parameters>

  <content>
        <message>&#10;&#10;Scaffolding your PowerShell Module...&#10;&#10;&#10;</message>

        <newModuleManifest destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psd1'
                           moduleVersion='$PLASTER_PARAM_Version'
                           rootModule='${PLASTER_PARAM_ModuleName}.psm1'
                           encoding='UTF8-NoBOM'
                           openInEditor="true"/>

        <file source='Module.psm1'
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psm1'
              openInEditor="true"/>

        <file source=''
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}\Private'/>

        <file source=''
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}\Public'/>

        <file source='templates\.gitignore'
              destination='${PLASTER_PARAM_ModuleName}\.gitignore' />

        <templateFile source='templates\about_T.help.txt'
                      destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}\en-US\about_${PLASTER_PARAM_ModuleName}.help.txt' />

        <templateFile source='templates\README.md'
                      destination='${PLASTER_PARAM_ModuleName}\README.md' />

        <templateFile source='test\Module.T.ps1'
                      destination='${PLASTER_PARAM_ModuleName}\Tests\${PLASTER_PARAM_ModuleName}.Tests.ps1' />

        <file source=''
              destination='${PLASTER_PARAM_ModuleName}\Tests\Public'/>

        <file source=''
              destination='${PLASTER_PARAM_ModuleName}\Tests\Private'/>

        <file condition="$PLASTER_PARAM_Editor -eq 'VSCode'"
              source='editor\VSCode\settings.json'
              destination='${PLASTER_PARAM_ModuleName}\.vscode\settings.json' />

        <templateFile condition="$PLASTER_PARAM_Editor -eq 'VSCode'"
              source='editor\VSCode\tasks.json'
              destination='${PLASTER_PARAM_ModuleName}\.vscode\tasks.json' />

        <file condition="$PLASTER_PARAM_Build -eq 'VSTS'"
              source='templates\build_utils.ps1'
              destination='${PLASTER_PARAM_ModuleName}\build_utils.ps1' />

        <templateFile condition="$PLASTER_PARAM_Build -eq 'VSTS'"
              source='templates\module.build.ps1'
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.build.ps1' />

        <templateFile condition="$PLASTER_PARAM_Build -eq 'VSTS'"
              source='templates\module.nuspec'
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.nuspec' />

        <templateFile condition="$PLASTER_PARAM_Build -eq 'VSTS'"
              source='templates\module.settings.ps1'
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.settings.ps1' />

        <file condition="$PLASTER_PARAM_Build -eq 'VSTS' -and $PLASTER_PARAM_Binaries -eq 'Yes'"
              source='templates\packages.config'
              destination='${PLASTER_PARAM_ModuleName}\packages.config' />

        <templateFile condition="$PLASTER_PARAM_Build -eq 'VSTS'"
              source='templates\.vsts-ci.yml'
              destination='${PLASTER_PARAM_ModuleName}\.vsts-ci.yml' />

        <requireModule name="Pester" minimumVersion="4.0.3"
            message="Without Pester, you will not be able to run the provided Pester test to validate your module manifest file.`nWithout version 4.0.3, VS Code will not display Pester warnings and errors in the Problems panel."/>

        <requireModule name="InvokeBuild" minimumVersion="5.3.0"
            message="Without InvokeBuild, you will not be able to run the provided build tasks."/>

        <message>

Your new PowerShell module project '$PLASTER_PARAM_ModuleName' has been created.

        </message>

        <message>
A Pester test has been created to validate the module's manifest file.  Add additional tests to the test directory.
You can run the Pester tests in your project by executing the 'test' task.  Press Ctrl+P, then type 'task test'.

        </message>

        <message>
You can register your Azure DevOps Package Manager feed with PowerShell using the command 
Register-PSRepository -Name $PLASTER_PARAM_VstsPmRepoNameModule -SourceLocation 'https://pkgs.dev.azure.com/&lt;AzureDevOps Org Name&gt;/_packaging/$PLASTER_PARAM_VstsPmRepoNameModule/nuget/v2' -InstallationPolicy Trusted
        </message>
  </content>
</plasterManifest>
